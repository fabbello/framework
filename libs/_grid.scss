// ==========================================================================
//
// GRID SYSTEM
//
// ==========================================================================
// Inspired by semantic.gs
// and http://dbushell.com/2013/03/19/on-responsive-layout-and-grids/


// $Globals
// --------------------------------------------------------------------------

*,
*:after,
*:before {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

html,
body { min-height: 100%; }


// $Variables
// --------------------------------------------------------------------------

$total-width:     100%   !default;
$gutter-width:    1.5rem !default;
$columns-number:  12     !default;


// $Mixins
// --------------------------------------------------------------------------

// The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/
@mixin clearfix() {
    *zoom: 1;

    &:before,
    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}

@mixin baseline() {
    background-image: -moz-linear-gradient(top, rgba(0,0,0,0) 95%, rgba(0,0,0,0.3) 100%); /* FF3.6+ */
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(95%,rgba(0,0,0,0)), color-stop(100%,rgba(0,0,0,0.3))); /* Chrome,Safari4+ */
    background-image: -webkit-linear-gradient(top, rgba(0,0,0,0) 95%,rgba(0,0,0,0.3) 100%); /* Chrome10+,Safari5.1+ */
    background-image: -o-linear-gradient(top, rgba(0,0,0,0) 95%, rgba(0,0,0,0.3) 100%); /* Opera11.10+ */
    background-image: -ms-linear-gradient(top, rgba(0,0,0,0) 95%,rgba(0,0,0,0.3) 100%); /* IE10+ */
    background-image: linear-gradient(top, rgba(0,0,0,0.3) 95%,rgba(0,0,0,0.3) 100%); /* W3C */
     
    -webkit-background-size: 100% #{$line-height}rem;
         -o-background-size: 100% #{$line-height}rem;
            background-size: 100% #{$line-height}rem;
}

@mixin row($columns-number: $columns-number) {
    margin: 0 ($gutter-width / -2);
    @include clearfix();
}

@mixin column($x, $columns-number: $columns-number) {
    display: block;
    float: left;
    width: ($total-width / $columns-number) * $x;
    padding: 0 ($gutter-width / 2);
}

@mixin push($offset: 1) {
    position: relative;
    left: ($total-width / $columns-number) * $offset;
}

@mixin pull($offset: 1) {
    position: relative;
    right: ($total-width / $columns-number) * $offset;
}